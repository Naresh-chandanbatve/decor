{"id":"PFiV","dependencies":[{"name":"C:\\GitHub\\decor\\decor\\node_modules\\@chakra-ui\\hooks\\dist\\chunk-QP32JBMJ.mjs.map","includedInParent":true,"mtime":1707852900216},{"name":"C:\\GitHub\\decor\\decor\\package.json","includedInParent":true,"mtime":1709068720113},{"name":"C:\\GitHub\\decor\\decor\\node_modules\\@chakra-ui\\hooks\\package.json","includedInParent":true,"mtime":1707852904601},{"name":"react","loc":{"line":4,"column":23,"index":57},"parent":"C:\\GitHub\\decor\\decor\\node_modules\\@chakra-ui\\hooks\\dist\\chunk-QP32JBMJ.mjs","resolved":"C:\\GitHub\\decor\\decor\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.useConst=r;var e=require(\"react\");function r(r){const t=(0,e.useRef)(null);return null===t.current&&(t.current=\"function\"==typeof r?r():r),t.current}"},"sourceMaps":{"js":{"mappings":[{"source":"../src/use-const.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":0}},{"source":"../src/use-const.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":13}},{"source":"../src/use-const.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":20}},{"source":"../src/use-const.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":35}},{"source":"../src/use-const.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":43}},{"source":"../src/use-const.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":56}},{"source":"../src/use-const.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":57}},{"source":"../src/use-const.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":64}},{"source":"../src/use-const.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":68}},{"source":"../src/use-const.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":76}},{"source":"../src/use-const.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":85}},{"source":"../src/use-const.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":87}},{"source":"../src/use-const.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"../src/use-const.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":93}},{"source":"../src/use-const.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":101}},{"source":"../src/use-const.ts","name":null,"original":{"line":12,"column":7},"generated":{"line":1,"column":110}},{"source":"../src/use-const.ts","name":null,"original":{"line":12,"column":16},"generated":{"line":1,"column":119}},{"source":"../src/use-const.ts","name":null,"original":{"line":12,"column":40},"generated":{"line":1,"column":121}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":1,"column":124}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":8},"generated":{"line":1,"column":130}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":14},"generated":{"line":1,"column":133}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":14},"generated":{"line":1,"column":135}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":14},"generated":{"line":1,"column":137}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":31},"generated":{"line":1,"column":145}},{"source":"../src/use-const.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":151}},{"source":"../src/use-const.ts","name":null,"original":{"line":18,"column":22},"generated":{"line":1,"column":158}},{"source":"../src/use-const.ts","name":null,"original":{"line":18,"column":6},"generated":{"line":1,"column":165}},{"source":"../src/use-const.ts","name":null,"original":{"line":18,"column":10},"generated":{"line":1,"column":167}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":1,"column":177}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":1,"column":179}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":34},"generated":{"line":1,"column":187}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":25},"generated":{"line":1,"column":206}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":48},"generated":{"line":1,"column":208}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":71},"generated":{"line":1,"column":212}},{"source":"../src/use-const.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":1,"column":215}},{"source":"../src/use-const.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":1,"column":217}}],"sources":{"../src/use-const.ts":"import { useRef } from \"react\"\n\ntype InitFn<T> = () => T\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConst`\n * you can ensure that initializers don't execute twice or more.\n */\nexport function useConst<T extends any>(init: T | InitFn<T>): T {\n  // Use useRef to store the value because it's the least expensive built-in\n  // hook that works here. We could also use `useState` but that's more\n  // expensive internally due to reducer handling which we don't need.\n  const ref = useRef<T | null>(null)\n\n  if (ref.current === null) {\n    ref.current = typeof init === \"function\" ? (init as InitFn<T>)() : init\n  }\n\n  return ref.current as T\n}\n"},"lineCount":null}},"error":null,"hash":"519392f8bc60a5145df569baac046d9a","cacheData":{"env":{}}}