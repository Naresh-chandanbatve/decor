{"id":"PFiV","dependencies":[{"name":"C:\\GitHub\\decor\\decor\\node_modules\\@chakra-ui\\hooks\\dist\\chunk-QP32JBMJ.mjs.map","includedInParent":true,"mtime":1707852900216},{"name":"C:\\GitHub\\decor\\decor\\package.json","includedInParent":true,"mtime":1709069539726},{"name":"C:\\GitHub\\decor\\decor\\node_modules\\@chakra-ui\\hooks\\package.json","includedInParent":true,"mtime":1707852904601},{"name":"react","loc":{"line":4,"column":23,"index":57},"parent":"C:\\GitHub\\decor\\decor\\node_modules\\@chakra-ui\\hooks\\dist\\chunk-QP32JBMJ.mjs","resolved":"C:\\GitHub\\decor\\decor\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n'use client';\n\n// src/use-const.ts\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useConst = useConst;\nvar _react = require(\"react\");\nfunction useConst(init) {\n  const ref = (0, _react.useRef)(null);\n  if (ref.current === null) {\n    ref.current = typeof init === \"function\" ? init() : init;\n  }\n  return ref.current;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../src/use-const.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":9,"column":0}},{"source":"../src/use-const.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":9,"column":4}},{"source":"../src/use-const.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":9,"column":10}},{"source":"../src/use-const.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":9,"column":13}},{"source":"../src/use-const.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":9,"column":20}},{"source":"../src/use-const.ts","name":null,"original":{"line":12,"column":7},"generated":{"line":10,"column":0}},{"source":"../src/use-const.ts","name":null,"original":{"line":12,"column":16},"generated":{"line":10,"column":9}},{"source":"../src/use-const.ts","name":null,"original":{"line":12,"column":16},"generated":{"line":10,"column":17}},{"source":"../src/use-const.ts","name":null,"original":{"line":12,"column":40},"generated":{"line":10,"column":18}},{"source":"../src/use-const.ts","name":null,"original":{"line":12,"column":40},"generated":{"line":10,"column":22}},{"source":"../src/use-const.ts","name":null,"original":{"line":12,"column":64},"generated":{"line":10,"column":24}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":11,"column":2}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":8},"generated":{"line":11,"column":8}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":8},"generated":{"line":11,"column":11}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":14},"generated":{"line":11,"column":14}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":14},"generated":{"line":11,"column":18}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":14},"generated":{"line":11,"column":31}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":31},"generated":{"line":11,"column":33}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":35},"generated":{"line":11,"column":37}},{"source":"../src/use-const.ts","name":null,"original":{"line":16,"column":35},"generated":{"line":11,"column":38}},{"source":"../src/use-const.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":12,"column":2}},{"source":"../src/use-const.ts","name":null,"original":{"line":18,"column":6},"generated":{"line":12,"column":6}},{"source":"../src/use-const.ts","name":null,"original":{"line":18,"column":6},"generated":{"line":12,"column":9}},{"source":"../src/use-const.ts","name":null,"original":{"line":18,"column":10},"generated":{"line":12,"column":10}},{"source":"../src/use-const.ts","name":null,"original":{"line":18,"column":10},"generated":{"line":12,"column":17}},{"source":"../src/use-const.ts","name":null,"original":{"line":18,"column":22},"generated":{"line":12,"column":22}},{"source":"../src/use-const.ts","name":null,"original":{"line":18,"column":22},"generated":{"line":12,"column":26}},{"source":"../src/use-const.ts","name":null,"original":{"line":18,"column":28},"generated":{"line":12,"column":28}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":13,"column":4}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":13,"column":7}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":13,"column":8}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":13,"column":15}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":18},"generated":{"line":13,"column":18}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":25},"generated":{"line":13,"column":25}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":25},"generated":{"line":13,"column":29}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":34},"generated":{"line":13,"column":34}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":34},"generated":{"line":13,"column":44}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":48},"generated":{"line":13,"column":47}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":48},"generated":{"line":13,"column":51}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":67},"generated":{"line":13,"column":52}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":67},"generated":{"line":13,"column":53}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":71},"generated":{"line":13,"column":56}},{"source":"../src/use-const.ts","name":null,"original":{"line":19,"column":71},"generated":{"line":13,"column":60}},{"source":"../src/use-const.ts","name":null,"original":{"line":20,"column":2},"generated":{"line":14,"column":2}},{"source":"../src/use-const.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":15,"column":2}},{"source":"../src/use-const.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":15,"column":9}},{"source":"../src/use-const.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":15,"column":12}},{"source":"../src/use-const.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":15,"column":13}},{"source":"../src/use-const.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":15,"column":20}},{"source":"../src/use-const.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":16,"column":0}}],"sources":{"../src/use-const.ts":"import { useRef } from \"react\"\n\ntype InitFn<T> = () => T\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConst`\n * you can ensure that initializers don't execute twice or more.\n */\nexport function useConst<T extends any>(init: T | InitFn<T>): T {\n  // Use useRef to store the value because it's the least expensive built-in\n  // hook that works here. We could also use `useState` but that's more\n  // expensive internally due to reducer handling which we don't need.\n  const ref = useRef<T | null>(null)\n\n  if (ref.current === null) {\n    ref.current = typeof init === \"function\" ? (init as InitFn<T>)() : init\n  }\n\n  return ref.current as T\n}\n"},"lineCount":null}},"error":null,"hash":"239e63a1d778b25883ab3644ce0fe1ac","cacheData":{"env":{}}}